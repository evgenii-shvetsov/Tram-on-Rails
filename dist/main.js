/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_driveway__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/driveway */ \"./src/scripts/driveway.js\");\n/* harmony import */ var _scripts_moving_objects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/moving_objects */ \"./src/scripts/moving_objects.js\");\n/* harmony import */ var _scripts_sound__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/sound */ \"./src/scripts/sound.js\");\n// import StopWatch from './scripts/stopwatch';\n\n\n// import DrawingObjects from './scripts/moving_objects'\n\n\n// import { UpdateGame } from './scripts/utils'\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // console.log(\"hey, script was loaded\")\n\n  window.addEventListener(\"keydown\", function (e) {\n    KeyDown(e);\n  });\n\n  ///////////STOPWATCH CODE//////////////\n  let clock;\n  let hour = 0o00;\n  let minute = 0o00;\n  let second = 0o00;\n  let count = 0o00;\n  function stopWatch() {\n    if (clock) {\n      count++;\n      if (count == 100) {\n        second++;\n        count = 0;\n      }\n      if (second == 60) {\n        minute++;\n        second = 0;\n      }\n      if (minute == 60) {\n        hour++;\n        minute = 0;\n        second = 0;\n      }\n      let hrString = hour;\n      let minString = minute;\n      let secString = second;\n      let countString = count;\n      if (hour < 10) {\n        hrString = \"0\" + hrString;\n      }\n      if (minute < 10) {\n        minString = \"0\" + minString;\n      }\n      if (second < 10) {\n        secString = \"0\" + secString;\n      }\n      if (count < 10) {\n        countString = \"0\" + countString;\n      }\n      document.getElementById('min').innerHTML = minString;\n      document.getElementById('sec').innerHTML = secString;\n      document.getElementById('count').innerHTML = countString;\n      setTimeout(stopWatch, 10);\n\n      // console.log(`${minute} min ${second} sec ${count} ms`)\n    }\n  }\n  ///////////STOPWATCH CODE  END//////////////\n\n  // let clock;\n  // let stopWatch = new StopWatch(clock);\n\n  // CANVAS DRAWING\n  const canvas = document.getElementById(\"game-canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  canvas.width = 626;\n  canvas.height = 626;\n\n  // WORKING WITH DOM\n  // let controls = document.querySelector(\".controls\");\n  let play_game = document.getElementById(\"play_game\");\n  let resetGame = document.getElementById(\"resetGame\");\n  let control_keys = document.getElementById(\"control_keys\");\n  let control_keys_space = document.getElementById(\"control_keys_space\");\n  let control_keys_pause = document.getElementById(\"control_keys_pause\");\n  let control_keys_honk = document.getElementById(\"control_keys_honk\");\n  let control_keys_acceleration = document.getElementById(\"control_keys_acceleration\");\n  let stopwatch = document.getElementById('time');\n  let gameCounters = document.querySelector('.game-counters');\n  let roundCounter = document.getElementById('round-counter');\n  let lifeCounter = document.getElementById('life-counter');\n  let rageLevel = document.getElementById('rage-level');\n  let carsPassed = document.getElementById('cars-passed');\n  let collisionScreen = document.getElementById('collision-screen');\n  let soundControl = document.querySelector(\".sound-control\");\n  let gameInstructions = document.querySelector(\".tooltip\");\n  // let lackOfRangeScreen = document.getElementById('lack-of-rage-screen');\n\n  play_game.addEventListener(\"click\", e => {\n    // console.log('play is working');\n    LaunchGame();\n    play_game.classList.add(\"hide-controls\");\n    gameInstructions.style.display = \"none\";\n    resetGame.style.display = \"block\";\n    stopwatch.style.display = \"block\";\n    control_keys.style.display = \"block\";\n    control_keys_space.style.display = \"block\";\n    control_keys_pause.style.display = \"block\";\n    control_keys_honk.style.display = \"block\";\n    control_keys_acceleration.style.display = \"block\";\n    gameCounters.style.display = \"block\";\n    //stopwatch run\n    clock = true;\n    stopWatch();\n  });\n  resetGame.addEventListener(\"click\", e => {\n    // console.log('reset is working')\n    window.location.reload();\n  });\n\n  //VARIABLES start\n\n  const REFRESH_SCREEN_TIME = 1000 / 50;\n  let timerInterval = null;\n  let size = 0.1; //Moving object size\n  let speed = 4; //speed for canvas \n  let obstacles = []; //store all moving obstacles\n  let obstaclesSpeed = 4; //could be triggered in rounds increasing\n  let playerAcceleration = 5; // speed of moving on the canvas\n\n  // GAME COUNTERS\n  let round = 1; // round number\n  roundCounter.innerHTML = `Round ${round}`;\n  let life = 3; // \"life\" left\n  lifeCounter.innerHTML = `Life ${life}`;\n  let rage = 3; //road rage, remove obstacles, \"n\" amount of attempts\n  rageLevel.innerHTML = `Rage ${rage}`;\n  let disappeardCars = 0;\n  carsPassed.innerHTML = `Passed cars ${disappeardCars}`;\n\n  //SOUND AREA\n  let mute = false;\n  soundControl.addEventListener(\"click\", e => {\n    // console.log(\"sound control is working\")\n    if (mute === false) {\n      mute = true;\n      soundControl.src = \"assets/sound-off.png\";\n      // console.log(mute, \"mute on\")\n    } else {\n      mute = false;\n      soundControl.src = \"assets/sound-on.png\";\n      // console.log(mute, \"mute off\")\n    }\n  });\n\n  let carHorn = new _scripts_sound__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('assets/car-horn2.wav');\n  let crashSound = new _scripts_sound__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('assets/crash_sound.wav');\n  let highwaySound = new _scripts_sound__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('assets/highway-sound.mp3');\n\n  //VARIABLES end\n  // if(round == 2){\n  //     // roundCounter.classList.add(\"round-counter-animation\")\n  //     // setTimeout(()=>{\n  //     //     roundCounter.classList.remove(\"round-counter-animation\")\n  //     // },2000)\n  // }\n\n  // Function to pause the game and show the pause screen\n  let popupPause;\n  function pauseScreen() {\n    if (timerInterval != null) {\n      StopGame();\n\n      //pausing main sound\n      if (!mute) {\n        highwaySound.stop();\n      }\n\n      // if(!mute) highwaySound.pause()\n      clock = false;\n      collisionScreen.style.display = 'block';\n      popupPause = document.createElement(\"p\");\n      popupPause.innerHTML = `<br> <br> GAME PAUSED <br> <br> press ESC to CONTINUE`;\n      collisionScreen.appendChild(popupPause);\n    } else {\n      LaunchGame();\n\n      //playing main sound\n      if (!mute) {\n        highwaySound.play();\n      }\n\n      // if(!mute) highwaySound.play() //sound on\n      popupPause.remove();\n      collisionScreen.style.display = 'none';\n      clock = true;\n      stopWatch();\n    }\n  }\n\n  // Function to start/pause game\n  function pausingGame() {\n    if (timerInterval == null) {\n      LaunchGame();\n\n      //playing main sound\n      if (!mute) {\n        highwaySound.play();\n      }\n\n      // if(!mute) highwaySound.play() //sound on\n      clock = true;\n      stopWatch();\n    } else {\n      StopGame();\n\n      //pausing main sound\n      if (!mute) {\n        highwaySound.stop();\n      }\n\n      // if(!mute) highwaySound.pause()\n      clock = false;\n    }\n  }\n\n  // Array with driveways images //works fine now\n  let driveWays = [new _scripts_driveway__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('assets/driveway1.jpeg', 0, speed, canvas), new _scripts_driveway__WEBPACK_IMPORTED_MODULE_0__[\"default\"]('assets/driveway1.jpeg', canvas.width, speed, canvas)];\n\n  // Main charachter RACER // works fine now //car1\n  let racer = new _scripts_moving_objects__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"assets/car1.png\", canvas.width / 2, canvas.height / 1.3, true, speed, size, canvas, obstaclesSpeed); // main racer object\n\n  //LEVEL LOGIC\n  function increaseLevel() {\n    if (disappeardCars < 5) {\n      round = 1;\n      obstaclesSpeed = 4;\n      // console.log(`in increase level! round:${round}, obstaclespeed:${obstaclesSpeed}`)\n    } else if (disappeardCars > 5 && disappeardCars < 20) {\n      roundCounter.classList.add(\"round-counter-animation\");\n      round = 2;\n      setTimeout(() => roundCounter.classList.remove(\"round-counter-animation\"), 8000);\n      roundCounter.innerHTML = `Round ${round}`;\n      obstaclesSpeed = 5.5;\n      // console.log(`in increase level! round:${round}, obstaclespeed:${obstaclesSpeed}`)\n    } else if (disappeardCars > 20 && disappeardCars < 30) {\n      roundCounter.classList.add(\"round-counter-animation1\");\n      round = 3;\n      // setTimeout(()=>roundCounter.classList.remove(\"round-counter-animation1\"),8000)\n      roundCounter.innerHTML = `Round ${round}`;\n      obstaclesSpeed = 7;\n      // console.log(`in increase level! round:${round}, obstaclespeed:${obstaclesSpeed}`)\n    } else if (disappeardCars === 35) {\n      collisionScreen.style.display = 'block';\n      StopGame();\n      if (!mute) {\n        highwaySound.stop();\n      }\n      clock = false; // stop clock when collision\n      let tag = document.createElement(\"p\");\n      tag.innerHTML = `\n        WOW, impressive driving skills!!! <br> <br> \n        Your time is:  ${minute} min ${second} sec ${count} ms <br>\n        You passed:   ${disappeardCars} cars <br> \n        Rage mode left:   ${rage} <br> \n        Lives left:   ${life} <br> \n        `;\n      collisionScreen.appendChild(tag);\n      resetGame.classList.add(\"rage-level-shake\");\n    }\n  }\n\n  // MAIN FUNCTIONS\n\n  function LaunchGame() {\n    // if(!racer.collideWith)\n    // {\n    timerInterval = setInterval(UpdateGame, REFRESH_SCREEN_TIME); //Refreshing screen n time per second\n    // }\n  }\n\n  function StopGame() {\n    clearInterval(timerInterval); //Stop game\n    timerInterval = null;\n  }\n  function UpdateGame() {\n    driveWays[0].updateDriveWay(driveWays[1]);\n    driveWays[1].updateDriveWay(driveWays[0]);\n    if (!mute) {\n      highwaySound.play();\n    } else {\n      highwaySound.stop();\n    }\n    //TESTING TIMER\n\n    //Generating obstacles  //best value so far randomNumber(0, 10000) > 9750\n\n    increaseLevel();\n\n    // let randX =randomNumber(155, canvas.width - 190);\n    // let randY = randomNumber(150, 350) * -1;\n\n    setInterval(() => {\n      if (randomNumber(0, 10000) > 9950) {\n        //car 1\n        let randX = randomNumber(155, canvas.width - 190);\n        let randY = randomNumber(150, 350) * -1;\n        obstacles.push(new _scripts_moving_objects__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"assets/cabrio.png\", randX, randY, false, speed, size, canvas, obstaclesSpeed));\n      }\n      if (randomNumber(0, 10000) > 9950) {\n        //car 2\n        let randX = randomNumber(155, canvas.width - 190);\n        let randY = randomNumber(150, 350) * -1;\n        obstacles.push(new _scripts_moving_objects__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"assets/bugatti.png\", randX, randY, false, speed, size, canvas, obstaclesSpeed));\n      }\n      if (randomNumber(0, 10000) > 9950) {\n        //car 3\n        let randX = randomNumber(155, canvas.width - 190);\n        let randY = randomNumber(150, 350) * -1;\n        obstacles.push(new _scripts_moving_objects__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"assets/ferrari_red.png\", randX, randY, false, speed, size, canvas, obstaclesSpeed));\n      }\n      if (randomNumber(0, 10000) > 9950) {\n        //car 4\n        let randX = randomNumber(155, canvas.width - 190);\n        let randY = randomNumber(150, 350) * -1;\n        obstacles.push(new _scripts_moving_objects__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"assets/acura1.png\", randX, randY, false, speed, size, canvas, obstaclesSpeed));\n      }\n    }, 1000);\n    racer.updateMovingObject();\n    if (racer.collideWith) {\n      // alert(\"!!!!!!!!!OHHHHH CRASH!\");\n      // StopGame();\n    }\n    let isDestroyed = false;\n    for (let i = 0; i < obstacles.length; i++) {\n      obstacles[i].updateMovingObject();\n      if (obstacles[i].collideWith) {\n        isDestroyed = true;\n      }\n    }\n    if (isDestroyed) {\n      //removing cars from canvas and counting them\n      obstacles.shift();\n      disappeardCars++;\n      carsPassed.innerHTML = `Passed cars ${disappeardCars}`;\n    }\n    let collision = false;\n    for (let i = 0; i < obstacles.length; i++) {\n      collision = racer.hit(obstacles[i]);\n      if (collision) {\n        if (!mute) crashSound.play();\n        // crashSound.play();\n        //adding screen information for a user\n        collisionScreen.style.display = 'block';\n        if (life > 0) {\n          pausingGame();\n          life--;\n          let tag = document.createElement(\"p\");\n          tag.innerHTML = `<br> <br>Hey, you hit a car! <br> <br>\n                     ${life} collision(s) left`;\n          collisionScreen.appendChild(tag);\n          setTimeout(() => {\n            tag.remove();\n            collisionScreen.style.display = 'none';\n            LaunchGame();\n            clock = true;\n            stopWatch();\n          }, 2500);\n          obstacles = [];\n          lifeCounter.innerHTML = `Life ${life}`;\n        } else {\n          StopGame();\n          if (!mute) {\n            highwaySound.stop();\n          }\n          clock = false; // stop clock when collision\n          let tag = document.createElement(\"p\");\n          tag.innerHTML = `\n                    You're a bad driver!!! <br> <br> \n                    Your time is: ${minute} min ${second} sec ${count} ms <br>\n                    You passed: ${disappeardCars} cars <br> \n                    `;\n          collisionScreen.appendChild(tag);\n          resetGame.classList.add(\"rage-level-shake\");\n          break;\n        }\n      }\n    }\n    draw();\n    // DrawingObjects.draw(); move draw to separate class\n  }\n\n  //adding graphics on canvas works fine\n  function draw() {\n    // clear all from canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // drawing background driveway\n    for (let i = 0; i < driveWays.length; i++) {\n      ctx.drawImage(driveWays[i].image,\n      // driveway image\n      0,\n      //staring point X on driveway image\n      0,\n      //staring point Y on driveway image\n      driveWays[i].image.width,\n      //end point X on driveway image\n      driveWays[i].image.height,\n      //end point Y on driveway image\n      driveWays[i].x,\n      // Axis X on canvas\n      driveWays[i].y,\n      // Axis Y on canvas\n      canvas.width,\n      //canvas width\n      canvas.width //canvas hiight\n      );\n    }\n\n    // drawing main racer\n    drawMovingObject(racer);\n\n    // drawing obstacles\n    for (let i = 0; i < obstacles.length; i++) {\n      drawMovingObject(obstacles[i]);\n    }\n  }\n  // works fine   \n  function drawMovingObject(movingObject) {\n    ctx.drawImage(movingObject.image, 0, 0, movingObject.image.width, movingObject.image.height, movingObject.x, movingObject.y, movingObject.image.width * size, movingObject.image.height * size);\n  }\n\n  //Rage effect for canvas  START\n\n  function shakeCanvas() {\n    let canvasShake = document.getElementById('game-canvas');\n    if (rage > 0) {\n      if (!mute) carHorn.play();\n      // carHorn.play();\n      canvasShake.style = \"box-shadow: 0 0 50px rgb(225, 18, 18)\";\n      canvasShake.classList.add(\"shacky-canvas\");\n      // console.log(rage, \"before action\")\n      obstacles = [];\n      rage--;\n      rageLevel.innerHTML = `Rage ${rage}`;\n      // console.log(rage, \"after action\")\n    } else {\n      rageLevel.classList.add(\"rage-level-shake\");\n      setTimeout(() => {\n        rageLevel.classList.remove(\"rage-level-shake\");\n      }, 3000);\n    }\n    setTimeout(() => {\n      canvasShake.classList.remove(\"shacky-canvas\");\n      canvasShake.style = \"box-shadow: 0 0 24px rgb(21, 199, 223)\";\n    }, 1500);\n  }\n  //Rage effect for canvas END\n\n  //that's fine as well\n  function KeyDown(e) {\n    e.preventDefault();\n    switch (e.keyCode) {\n      case 65:\n        //Left\n        racer.move(\"x\", -speed, playerAcceleration);\n        break;\n      case 68:\n        //Right\n        racer.move(\"x\", speed, playerAcceleration);\n        break;\n      case 87:\n        //Up\n        racer.move(\"y\", -speed, playerAcceleration);\n        break;\n      case 83:\n        //Down\n        racer.move(\"y\", speed, playerAcceleration);\n        break;\n      case 32:\n        //Space\n        // Remove all obstacles from screen\n        // obstacles = [];\n        shakeCanvas();\n        break;\n      case 72:\n        // Key \"H\"\n        //Horn sound\n        if (!mute) carHorn.play();\n        break;\n      case 38:\n        //Up\n        playerAcceleration++;\n        // console.log(`Acceleration: ${playerAcceleration}`)\n        break;\n      case 40:\n        //down\n        playerAcceleration--;\n        // console.log(`Acceleration: ${playerAcceleration}`)\n        break;\n      case 27:\n        //Esc pausing game and stopwatch\n        // pausingGame()\n        pauseScreen();\n        break;\n    }\n  }\n\n  // that's fine\n  function randomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/driveway.js":
/*!*********************************!*\
  !*** ./src/scripts/driveway.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DriveWay; }\n/* harmony export */ });\nclass DriveWay {\n  constructor(image, y, speed, canvas) {\n    this.x = 0;\n    this.y = y;\n    this.speed = speed;\n    this.canvas = canvas;\n\n    //image uploading\n    this.loaded = false;\n    this.image = new Image();\n    let object = this;\n    this.image.addEventListener(\"load\", function () {\n      object.loaded = true;\n    });\n    this.image.src = image;\n  }\n  updateDriveWay(driveWay) {\n    this.y += this.speed; //the driveway image will move down every frame\n    // console.log(\"driveway console\")\n    if (this.y > this.canvas.height) {\n      //change the position if image left canvas\n      this.y = driveWay.y - this.canvas.width + this.speed; //new position will depend on the second picture\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9kcml2ZXdheS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsTUFBTUEsUUFBUTtFQUN6QkMsV0FBVyxDQUFDQyxLQUFLLEVBQUVDLENBQUMsRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEVBQUM7SUFDaEMsSUFBSSxDQUFDQyxDQUFDLEdBQUcsQ0FBQztJQUNWLElBQUksQ0FBQ0gsQ0FBQyxHQUFHQSxDQUFDO0lBQ1YsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUs7SUFDbEIsSUFBSSxDQUFDQyxNQUFNLEdBQUdBLE1BQU07O0lBRXBCO0lBQ0EsSUFBSSxDQUFDRSxNQUFNLEdBQUcsS0FBSztJQUNuQixJQUFJLENBQUNMLEtBQUssR0FBRyxJQUFJTSxLQUFLLEVBQUU7SUFDeEIsSUFBSUMsTUFBTSxHQUFHLElBQUk7SUFDakIsSUFBSSxDQUFDUCxLQUFLLENBQUNRLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxZQUFZO01BQUVELE1BQU0sQ0FBQ0YsTUFBTSxHQUFHLElBQUk7SUFBRSxDQUFDLENBQUM7SUFDMUUsSUFBSSxDQUFDTCxLQUFLLENBQUNTLEdBQUcsR0FBR1QsS0FBSztFQUMxQjtFQUVBVSxjQUFjLENBQUNDLFFBQVEsRUFBRTtJQUNyQixJQUFJLENBQUNWLENBQUMsSUFBSSxJQUFJLENBQUNDLEtBQUssQ0FBQyxDQUFDO0lBQ3RCO0lBQ0EsSUFBRyxJQUFJLENBQUNELENBQUMsR0FBRyxJQUFJLENBQUNFLE1BQU0sQ0FBQ1MsTUFBTSxFQUFDO01BQUU7TUFDN0IsSUFBSSxDQUFDWCxDQUFDLEdBQUdVLFFBQVEsQ0FBQ1YsQ0FBQyxHQUFHLElBQUksQ0FBQ0UsTUFBTSxDQUFDVSxLQUFLLEdBQUcsSUFBSSxDQUFDWCxLQUFLLENBQUMsQ0FBQztJQUMxRDtFQUNKO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFtX29uX3JhaWxzLy4vc3JjL3NjcmlwdHMvZHJpdmV3YXkuanM/Yzk5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBEcml2ZVdheXtcbiAgICBjb25zdHJ1Y3RvcihpbWFnZSwgeSwgc3BlZWQsIGNhbnZhcyl7XG4gICAgICAgIHRoaXMueCA9IDA7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHRoaXMuc3BlZWQgPSBzcGVlZDtcbiAgICAgICAgdGhpcy5jYW52YXMgPSBjYW52YXNcbiAgICAgICAgXG4gICAgICAgIC8vaW1hZ2UgdXBsb2FkaW5nXG4gICAgICAgIHRoaXMubG9hZGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgbGV0IG9iamVjdCA9IHRoaXM7XG4gICAgICAgIHRoaXMuaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgZnVuY3Rpb24gKCkgeyBvYmplY3QubG9hZGVkID0gdHJ1ZTsgfSk7XG4gICAgICAgIHRoaXMuaW1hZ2Uuc3JjID0gaW1hZ2U7XG4gICAgfVxuXG4gICAgdXBkYXRlRHJpdmVXYXkoZHJpdmVXYXkpIHtcbiAgICAgICAgdGhpcy55ICs9IHRoaXMuc3BlZWQ7IC8vdGhlIGRyaXZld2F5IGltYWdlIHdpbGwgbW92ZSBkb3duIGV2ZXJ5IGZyYW1lXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiZHJpdmV3YXkgY29uc29sZVwiKVxuICAgICAgICBpZih0aGlzLnkgPiB0aGlzLmNhbnZhcy5oZWlnaHQpeyAvL2NoYW5nZSB0aGUgcG9zaXRpb24gaWYgaW1hZ2UgbGVmdCBjYW52YXNcbiAgICAgICAgICAgIHRoaXMueSA9IGRyaXZlV2F5LnkgLSB0aGlzLmNhbnZhcy53aWR0aCArIHRoaXMuc3BlZWQ7IC8vbmV3IHBvc2l0aW9uIHdpbGwgZGVwZW5kIG9uIHRoZSBzZWNvbmQgcGljdHVyZVxuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIkRyaXZlV2F5IiwiY29uc3RydWN0b3IiLCJpbWFnZSIsInkiLCJzcGVlZCIsImNhbnZhcyIsIngiLCJsb2FkZWQiLCJJbWFnZSIsIm9iamVjdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzcmMiLCJ1cGRhdGVEcml2ZVdheSIsImRyaXZlV2F5IiwiaGVpZ2h0Iiwid2lkdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/driveway.js\n");

/***/ }),

/***/ "./src/scripts/moving_objects.js":
/*!***************************************!*\
  !*** ./src/scripts/moving_objects.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MovingObject; }\n/* harmony export */ });\nclass MovingObject {\n  constructor(image, x, y, isRacer, speed, size, canvas, obstaclesSpeed, playerAcceleration) {\n    this.x = x;\n    this.y = y;\n    this.speed = speed;\n    this.size = size;\n    this.canvas = canvas;\n    this.obstaclesSpeed = obstaclesSpeed;\n    this.playerAcceleration = playerAcceleration;\n    this.collideWith = false; // to change\n    this.isRacer = isRacer;\n\n    //image loading\n    this.loaded = false;\n    this.image = new Image();\n    let object = this;\n    this.image.addEventListener(\"load\", function () {\n      object.loaded = true;\n    });\n    this.image.src = image;\n  }\n  updateMovingObject() {\n    if (!this.isRacer) {\n      //isRacer false, means that it is not an obstacle\n      this.y += this.speed + this.obstaclesSpeed; //obstacles speed\n    }\n\n    if (this.y > this.canvas.height + 50) {\n      this.collideWith = true;\n    }\n  }\n  hit(movingObject) {\n    let collisionStatus = false;\n    if (this.y < movingObject.y + movingObject.image.height * this.size && this.y + this.image.height * this.size > movingObject.y) {\n      //If there is collision by y\n\n      if (this.x + this.image.width * this.size > movingObject.x && this.x < movingObject.x + movingObject.image.width * this.size) {\n        //If there is collision by x\n\n        collisionStatus = true;\n      }\n    }\n    return collisionStatus;\n  }\n  move(vector, acceleration, playerAcceleration) {\n    if (vector == \"x\") {\n      acceleration *= playerAcceleration;\n      this.x += acceleration; //sliding on Axis X\n\n      //This is for all canvas move\n      //Restricting the ability to move out of the canvas on Axis X; resetting values\n      // if(this.x + this.image.width * this.size > this.canvas.width){\n      //     this.x -= acceleration; \n      // }\n      //Restricting the ability to move out of the canvas on Axis X; resetting values\n      if (this.x + 121 + this.image.width * this.size > this.canvas.width) {\n        this.x -= acceleration;\n      }\n      //default values are 0 for Axis X\n      if (this.x < 132) {\n        // this.x = 120;\n        this.x = 132;\n      }\n    } else {\n      acceleration *= playerAcceleration;\n      this.y += acceleration; //sliding on Axis Y\n      // Restricting the ability to move out of the canvas on Axis Y; resetting values\n      if (this.y + this.image.height * this.size > this.canvas.height) {\n        this.y -= acceleration;\n      }\n      if (this.y < 0) {\n        this.y = 0;\n      }\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tb3Zpbmdfb2JqZWN0cy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsTUFBTUEsWUFBWTtFQUM3QkMsV0FBVyxDQUFDQyxLQUFLLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxPQUFPLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLGNBQWMsRUFBRUMsa0JBQWtCLEVBQUM7SUFDdEYsSUFBSSxDQUFDUCxDQUFDLEdBQUdBLENBQUM7SUFDVixJQUFJLENBQUNDLENBQUMsR0FBR0EsQ0FBQztJQUVWLElBQUksQ0FBQ0UsS0FBSyxHQUFHQSxLQUFLO0lBQ2xCLElBQUksQ0FBQ0MsSUFBSSxHQUFHQSxJQUFJO0lBQ2hCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0MsY0FBYyxHQUFHQSxjQUFjO0lBQ3BDLElBQUksQ0FBQ0Msa0JBQWtCLEdBQUdBLGtCQUFrQjtJQUU1QyxJQUFJLENBQUNDLFdBQVcsR0FBRyxLQUFLLENBQUMsQ0FBRTtJQUMzQixJQUFJLENBQUNOLE9BQU8sR0FBR0EsT0FBTzs7SUFFdEI7SUFDQSxJQUFJLENBQUNPLE1BQU0sR0FBRyxLQUFLO0lBQ25CLElBQUksQ0FBQ1YsS0FBSyxHQUFHLElBQUlXLEtBQUssRUFBRTtJQUN4QixJQUFJQyxNQUFNLEdBQUcsSUFBSTtJQUNqQixJQUFJLENBQUNaLEtBQUssQ0FBQ2EsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLFlBQVk7TUFBRUQsTUFBTSxDQUFDRixNQUFNLEdBQUcsSUFBSTtJQUFFLENBQUMsQ0FBQztJQUMxRSxJQUFJLENBQUNWLEtBQUssQ0FBQ2MsR0FBRyxHQUFHZCxLQUFLO0VBQzFCO0VBRUFlLGtCQUFrQixHQUFFO0lBQ2hCLElBQUcsQ0FBQyxJQUFJLENBQUNaLE9BQU8sRUFBQztNQUFFO01BQ2YsSUFBSSxDQUFDRCxDQUFDLElBQUksSUFBSSxDQUFDRSxLQUFLLEdBQUcsSUFBSSxDQUFDRyxjQUFjLENBQUMsQ0FBQztJQUNoRDs7SUFFQSxJQUFHLElBQUksQ0FBQ0wsQ0FBQyxHQUFHLElBQUksQ0FBQ0ksTUFBTSxDQUFDVSxNQUFNLEdBQUcsRUFBRSxFQUFDO01BQ2hDLElBQUksQ0FBQ1AsV0FBVyxHQUFHLElBQUk7SUFDM0I7RUFDSjtFQUVBUSxHQUFHLENBQUNDLFlBQVksRUFBQztJQUNiLElBQUlDLGVBQWUsR0FBRyxLQUFLO0lBRTNCLElBQUcsSUFBSSxDQUFDakIsQ0FBQyxHQUFHZ0IsWUFBWSxDQUFDaEIsQ0FBQyxHQUFHZ0IsWUFBWSxDQUFDbEIsS0FBSyxDQUFDZ0IsTUFBTSxHQUFHLElBQUksQ0FBQ1gsSUFBSSxJQUFJLElBQUksQ0FBQ0gsQ0FBQyxHQUFHLElBQUksQ0FBQ0YsS0FBSyxDQUFDZ0IsTUFBTSxHQUFHLElBQUksQ0FBQ1gsSUFBSSxHQUFHYSxZQUFZLENBQUNoQixDQUFDLEVBQUM7TUFBRTs7TUFFNUgsSUFBRyxJQUFJLENBQUNELENBQUMsR0FBRyxJQUFJLENBQUNELEtBQUssQ0FBQ29CLEtBQUssR0FBRyxJQUFJLENBQUNmLElBQUksR0FBR2EsWUFBWSxDQUFDakIsQ0FBQyxJQUFJLElBQUksQ0FBQ0EsQ0FBQyxHQUFHaUIsWUFBWSxDQUFDakIsQ0FBQyxHQUFHaUIsWUFBWSxDQUFDbEIsS0FBSyxDQUFDb0IsS0FBSyxHQUFHLElBQUksQ0FBQ2YsSUFBSSxFQUFDO1FBQUU7O1FBRTFIYyxlQUFlLEdBQUcsSUFBSTtNQUMxQjtJQUNKO0lBRUEsT0FBT0EsZUFBZTtFQUMxQjtFQUVBRSxJQUFJLENBQUNDLE1BQU0sRUFBRUMsWUFBWSxFQUFDZixrQkFBa0IsRUFBRTtJQUMxQyxJQUFHYyxNQUFNLElBQUksR0FBRyxFQUFDO01BQ2JDLFlBQVksSUFBSWYsa0JBQWtCO01BQ2xDLElBQUksQ0FBQ1AsQ0FBQyxJQUFJc0IsWUFBWSxDQUFDLENBQUM7O01BRXhCO01BQ0E7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBLElBQUcsSUFBSSxDQUFDdEIsQ0FBQyxHQUFDLEdBQUcsR0FBRyxJQUFJLENBQUNELEtBQUssQ0FBQ29CLEtBQUssR0FBRyxJQUFJLENBQUNmLElBQUksR0FBRyxJQUFJLENBQUNDLE1BQU0sQ0FBQ2MsS0FBSyxFQUFDO1FBQzdELElBQUksQ0FBQ25CLENBQUMsSUFBSXNCLFlBQVk7TUFDMUI7TUFDQTtNQUNBLElBQUcsSUFBSSxDQUFDdEIsQ0FBQyxHQUFHLEdBQUcsRUFBQztRQUNaO1FBQ0EsSUFBSSxDQUFDQSxDQUFDLEdBQUcsR0FBRztNQUNoQjtJQUVKLENBQUMsTUFBTTtNQUNIc0IsWUFBWSxJQUFJZixrQkFBa0I7TUFDbEMsSUFBSSxDQUFDTixDQUFDLElBQUlxQixZQUFZLENBQUMsQ0FBQztNQUN4QjtNQUNBLElBQUcsSUFBSSxDQUFDckIsQ0FBQyxHQUFHLElBQUksQ0FBQ0YsS0FBSyxDQUFDZ0IsTUFBTSxHQUFHLElBQUksQ0FBQ1gsSUFBSSxHQUFHLElBQUksQ0FBQ0MsTUFBTSxDQUFDVSxNQUFNLEVBQUM7UUFDM0QsSUFBSSxDQUFDZCxDQUFDLElBQUlxQixZQUFZO01BQzFCO01BQ0EsSUFBRyxJQUFJLENBQUNyQixDQUFDLEdBQUcsQ0FBQyxFQUFDO1FBQ1YsSUFBSSxDQUFDQSxDQUFDLEdBQUcsQ0FBQztNQUNkO0lBQ0o7RUFFSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhbV9vbl9yYWlscy8uL3NyYy9zY3JpcHRzL21vdmluZ19vYmplY3RzLmpzPzRkNzIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW92aW5nT2JqZWN0e1xuICAgIGNvbnN0cnVjdG9yKGltYWdlLCB4LCB5LCBpc1JhY2VyLCBzcGVlZCwgc2l6ZSwgY2FudmFzLCBvYnN0YWNsZXNTcGVlZCwgcGxheWVyQWNjZWxlcmF0aW9uKXtcbiAgICAgICAgdGhpcy54ID0geDtcbiAgICAgICAgdGhpcy55ID0geTtcblxuICAgICAgICB0aGlzLnNwZWVkID0gc3BlZWQ7XG4gICAgICAgIHRoaXMuc2l6ZSA9IHNpemU7XG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xuICAgICAgICB0aGlzLm9ic3RhY2xlc1NwZWVkID0gb2JzdGFjbGVzU3BlZWRcbiAgICAgICAgdGhpcy5wbGF5ZXJBY2NlbGVyYXRpb24gPSBwbGF5ZXJBY2NlbGVyYXRpb25cblxuICAgICAgICB0aGlzLmNvbGxpZGVXaXRoID0gZmFsc2U7ICAvLyB0byBjaGFuZ2VcbiAgICAgICAgdGhpcy5pc1JhY2VyID0gaXNSYWNlcjtcblxuICAgICAgICAvL2ltYWdlIGxvYWRpbmdcbiAgICAgICAgdGhpcy5sb2FkZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBsZXQgb2JqZWN0ID0gdGhpcztcbiAgICAgICAgdGhpcy5pbWFnZS5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBmdW5jdGlvbiAoKSB7IG9iamVjdC5sb2FkZWQgPSB0cnVlOyB9KTtcbiAgICAgICAgdGhpcy5pbWFnZS5zcmMgPSBpbWFnZTtcbiAgICB9XG5cbiAgICB1cGRhdGVNb3ZpbmdPYmplY3QoKXtcbiAgICAgICAgaWYoIXRoaXMuaXNSYWNlcil7IC8vaXNSYWNlciBmYWxzZSwgbWVhbnMgdGhhdCBpdCBpcyBub3QgYW4gb2JzdGFjbGVcbiAgICAgICAgICAgIHRoaXMueSArPSB0aGlzLnNwZWVkICsgdGhpcy5vYnN0YWNsZXNTcGVlZDsgLy9vYnN0YWNsZXMgc3BlZWRcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKHRoaXMueSA+IHRoaXMuY2FudmFzLmhlaWdodCArIDUwKXtcbiAgICAgICAgICAgIHRoaXMuY29sbGlkZVdpdGggPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaGl0KG1vdmluZ09iamVjdCl7XG4gICAgICAgIGxldCBjb2xsaXNpb25TdGF0dXMgPSBmYWxzZTtcblxuICAgICAgICBpZih0aGlzLnkgPCBtb3ZpbmdPYmplY3QueSArIG1vdmluZ09iamVjdC5pbWFnZS5oZWlnaHQgKiB0aGlzLnNpemUgJiYgdGhpcy55ICsgdGhpcy5pbWFnZS5oZWlnaHQgKiB0aGlzLnNpemUgPiBtb3ZpbmdPYmplY3QueSl7IC8vSWYgdGhlcmUgaXMgY29sbGlzaW9uIGJ5IHlcbiAgICAgICAgXG4gICAgICAgICAgICBpZih0aGlzLnggKyB0aGlzLmltYWdlLndpZHRoICogdGhpcy5zaXplID4gbW92aW5nT2JqZWN0LnggJiYgdGhpcy54IDwgbW92aW5nT2JqZWN0LnggKyBtb3ZpbmdPYmplY3QuaW1hZ2Uud2lkdGggKiB0aGlzLnNpemUpeyAvL0lmIHRoZXJlIGlzIGNvbGxpc2lvbiBieSB4XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBjb2xsaXNpb25TdGF0dXMgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNvbGxpc2lvblN0YXR1cztcbiAgICB9XG5cbiAgICBtb3ZlKHZlY3RvciwgYWNjZWxlcmF0aW9uLHBsYXllckFjY2VsZXJhdGlvbikge1xuICAgICAgICBpZih2ZWN0b3IgPT0gXCJ4XCIpeyBcbiAgICAgICAgICAgIGFjY2VsZXJhdGlvbiAqPSBwbGF5ZXJBY2NlbGVyYXRpb247IFxuICAgICAgICAgICAgdGhpcy54ICs9IGFjY2VsZXJhdGlvbjsgLy9zbGlkaW5nIG9uIEF4aXMgWFxuICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAvL1RoaXMgaXMgZm9yIGFsbCBjYW52YXMgbW92ZVxuICAgICAgICAgICAgLy9SZXN0cmljdGluZyB0aGUgYWJpbGl0eSB0byBtb3ZlIG91dCBvZiB0aGUgY2FudmFzIG9uIEF4aXMgWDsgcmVzZXR0aW5nIHZhbHVlc1xuICAgICAgICAgICAgLy8gaWYodGhpcy54ICsgdGhpcy5pbWFnZS53aWR0aCAqIHRoaXMuc2l6ZSA+IHRoaXMuY2FudmFzLndpZHRoKXtcbiAgICAgICAgICAgIC8vICAgICB0aGlzLnggLT0gYWNjZWxlcmF0aW9uOyBcbiAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgIC8vUmVzdHJpY3RpbmcgdGhlIGFiaWxpdHkgdG8gbW92ZSBvdXQgb2YgdGhlIGNhbnZhcyBvbiBBeGlzIFg7IHJlc2V0dGluZyB2YWx1ZXNcbiAgICAgICAgICAgIGlmKHRoaXMueCsxMjEgKyB0aGlzLmltYWdlLndpZHRoICogdGhpcy5zaXplID4gdGhpcy5jYW52YXMud2lkdGgpe1xuICAgICAgICAgICAgICAgIHRoaXMueCAtPSBhY2NlbGVyYXRpb247IFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9kZWZhdWx0IHZhbHVlcyBhcmUgMCBmb3IgQXhpcyBYXG4gICAgICAgICAgICBpZih0aGlzLnggPCAxMzIpe1xuICAgICAgICAgICAgICAgIC8vIHRoaXMueCA9IDEyMDtcbiAgICAgICAgICAgICAgICB0aGlzLnggPSAxMzJcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9IGVsc2UgeyBcbiAgICAgICAgICAgIGFjY2VsZXJhdGlvbiAqPSBwbGF5ZXJBY2NlbGVyYXRpb247XG4gICAgICAgICAgICB0aGlzLnkgKz0gYWNjZWxlcmF0aW9uOyAvL3NsaWRpbmcgb24gQXhpcyBZXG4gICAgICAgICAgICAvLyBSZXN0cmljdGluZyB0aGUgYWJpbGl0eSB0byBtb3ZlIG91dCBvZiB0aGUgY2FudmFzIG9uIEF4aXMgWTsgcmVzZXR0aW5nIHZhbHVlc1xuICAgICAgICAgICAgaWYodGhpcy55ICsgdGhpcy5pbWFnZS5oZWlnaHQgKiB0aGlzLnNpemUgPiB0aGlzLmNhbnZhcy5oZWlnaHQpe1xuICAgICAgICAgICAgICAgIHRoaXMueSAtPSBhY2NlbGVyYXRpb247XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZih0aGlzLnkgPCAwKXtcbiAgICAgICAgICAgICAgICB0aGlzLnkgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJNb3ZpbmdPYmplY3QiLCJjb25zdHJ1Y3RvciIsImltYWdlIiwieCIsInkiLCJpc1JhY2VyIiwic3BlZWQiLCJzaXplIiwiY2FudmFzIiwib2JzdGFjbGVzU3BlZWQiLCJwbGF5ZXJBY2NlbGVyYXRpb24iLCJjb2xsaWRlV2l0aCIsImxvYWRlZCIsIkltYWdlIiwib2JqZWN0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInNyYyIsInVwZGF0ZU1vdmluZ09iamVjdCIsImhlaWdodCIsImhpdCIsIm1vdmluZ09iamVjdCIsImNvbGxpc2lvblN0YXR1cyIsIndpZHRoIiwibW92ZSIsInZlY3RvciIsImFjY2VsZXJhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/moving_objects.js\n");

/***/ }),

/***/ "./src/scripts/sound.js":
/*!******************************!*\
  !*** ./src/scripts/sound.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Sound; }\n/* harmony export */ });\nclass Sound {\n  constructor(src) {\n    this.src = src;\n    this.sound = document.createElement(\"audio\");\n    this.sound.src = src;\n    this.sound.setAttribute(\"preload\", \"auto\");\n    this.sound.setAttribute(\"controls\", \"none\");\n    this.sound.style.display = \"none\";\n    document.body.appendChild(this.sound);\n  }\n  play() {\n    this.sound.play();\n  }\n  stop() {\n    this.sound.pause();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9zb3VuZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsTUFBTUEsS0FBSztFQUN0QkMsV0FBVyxDQUFDQyxHQUFHLEVBQUM7SUFDWixJQUFJLENBQUNBLEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0MsS0FBSyxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxPQUFPLENBQUM7SUFDNUMsSUFBSSxDQUFDRixLQUFLLENBQUNELEdBQUcsR0FBR0EsR0FBRztJQUNwQixJQUFJLENBQUNDLEtBQUssQ0FBQ0csWUFBWSxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUM7SUFDMUMsSUFBSSxDQUFDSCxLQUFLLENBQUNHLFlBQVksQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDO0lBQzNDLElBQUksQ0FBQ0gsS0FBSyxDQUFDSSxLQUFLLENBQUNDLE9BQU8sR0FBRyxNQUFNO0lBQ2pDSixRQUFRLENBQUNLLElBQUksQ0FBQ0MsV0FBVyxDQUFDLElBQUksQ0FBQ1AsS0FBSyxDQUFDO0VBQ3pDO0VBRUFRLElBQUksR0FBRTtJQUNKLElBQUksQ0FBQ1IsS0FBSyxDQUFDUSxJQUFJLEVBQUU7RUFDbkI7RUFDQUMsSUFBSSxHQUFFO0lBQ0osSUFBSSxDQUFDVCxLQUFLLENBQUNVLEtBQUssRUFBRTtFQUNwQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhbV9vbl9yYWlscy8uL3NyYy9zY3JpcHRzL3NvdW5kLmpzP2U1YjAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU291bmR7XG4gICAgY29uc3RydWN0b3Ioc3JjKXtcbiAgICAgICAgdGhpcy5zcmMgPSBzcmM7XG4gICAgICAgIHRoaXMuc291bmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYXVkaW9cIik7XG4gICAgICAgIHRoaXMuc291bmQuc3JjID0gc3JjO1xuICAgICAgICB0aGlzLnNvdW5kLnNldEF0dHJpYnV0ZShcInByZWxvYWRcIiwgXCJhdXRvXCIpO1xuICAgICAgICB0aGlzLnNvdW5kLnNldEF0dHJpYnV0ZShcImNvbnRyb2xzXCIsIFwibm9uZVwiKTtcbiAgICAgICAgdGhpcy5zb3VuZC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5zb3VuZCk7XG4gICAgfVxuICAgIFxuICAgIHBsYXkoKXtcbiAgICAgIHRoaXMuc291bmQucGxheSgpO1xuICAgIH1cbiAgICBzdG9wKCl7XG4gICAgICB0aGlzLnNvdW5kLnBhdXNlKCk7XG4gICAgfVxuICB9Il0sIm5hbWVzIjpbIlNvdW5kIiwiY29uc3RydWN0b3IiLCJzcmMiLCJzb3VuZCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsInN0eWxlIiwiZGlzcGxheSIsImJvZHkiLCJhcHBlbmRDaGlsZCIsInBsYXkiLCJzdG9wIiwicGF1c2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/sound.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFtX29uX3JhaWxzLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;