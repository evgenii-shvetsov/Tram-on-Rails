{"version":3,"file":"main.js","mappings":"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","sources":["webpack://tram_on_rails/./src/scripts/driveway.js","webpack://tram_on_rails/./src/scripts/moving_objects.js","webpack://tram_on_rails/./src/scripts/sound.js","webpack://tram_on_rails/./src/index.js"],"sourcesContent":["export default class DriveWay{\n    constructor(image, y, speed, canvas){\n        this.x = 0;\n        this.y = y;\n        this.speed = speed;\n        this.canvas = canvas\n        \n        //image uploading\n        this.loaded = false;\n        this.image = new Image();\n        let object = this;\n        this.image.addEventListener(\"load\", function () { object.loaded = true; });\n        this.image.src = image;\n    }\n\n    updateDriveWay(driveWay) {\n        this.y += this.speed; //the driveway image will move down every frame\n        // console.log(\"driveway console\")\n        if(this.y > this.canvas.height){ //change the position if image left canvas\n            this.y = driveWay.y - this.canvas.width + this.speed; //new position will depend on the second picture\n        }\n    }\n}\n","export default class MovingObject{\n    constructor(image, x, y, isRacer, speed, size, canvas, obstaclesSpeed, playerAcceleration){\n        this.x = x;\n        this.y = y;\n\n        this.speed = speed;\n        this.size = size;\n        this.canvas = canvas;\n        this.obstaclesSpeed = obstaclesSpeed\n        this.playerAcceleration = playerAcceleration\n\n        this.collideWith = false;  // to change\n        this.isRacer = isRacer;\n\n        //image loading\n        this.loaded = false;\n        this.image = new Image();\n        let object = this;\n        this.image.addEventListener(\"load\", function () { object.loaded = true; });\n        this.image.src = image;\n    }\n\n    updateMovingObject(){\n        if(!this.isRacer){ //isRacer false, means that it is not an obstacle\n            this.y += this.speed + this.obstaclesSpeed; //obstacles speed\n        }\n\n        if(this.y > this.canvas.height + 50){\n            this.collideWith = true;\n        }\n    }\n\n    hit(movingObject){\n        let collisionStatus = false;\n\n        if(this.y < movingObject.y + movingObject.image.height * this.size && this.y + this.image.height * this.size > movingObject.y){ //If there is collision by y\n        \n            if(this.x + this.image.width * this.size > movingObject.x && this.x < movingObject.x + movingObject.image.width * this.size){ //If there is collision by x\n            \n                collisionStatus = true;\n            }\n        }\n\n        return collisionStatus;\n    }\n\n    move(vector, acceleration,playerAcceleration) {\n        if(vector == \"x\"){ \n            acceleration *= playerAcceleration; \n            this.x += acceleration; //sliding on Axis X\n               \n            //This is for all canvas move\n            //Restricting the ability to move out of the canvas on Axis X; resetting values\n            // if(this.x + this.image.width * this.size > this.canvas.width){\n            //     this.x -= acceleration; \n            // }\n            //Restricting the ability to move out of the canvas on Axis X; resetting values\n            if(this.x+121 + this.image.width * this.size > this.canvas.width){\n                this.x -= acceleration; \n            }\n            //default values are 0 for Axis X\n            if(this.x < 132){\n                // this.x = 120;\n                this.x = 132\n            }\n\n        } else { \n            acceleration *= playerAcceleration;\n            this.y += acceleration; //sliding on Axis Y\n            // Restricting the ability to move out of the canvas on Axis Y; resetting values\n            if(this.y + this.image.height * this.size > this.canvas.height){\n                this.y -= acceleration;\n            }\n            if(this.y < 0){\n                this.y = 0;\n            }\n        }\n        \n    }\n}\n","export default class Sound{\n    constructor(src){\n        this.src = src;\n        this.sound = document.createElement(\"audio\");\n        this.sound.src = src;\n        this.sound.setAttribute(\"preload\", \"auto\");\n        this.sound.setAttribute(\"controls\", \"none\");\n        this.sound.style.display = \"none\";\n        document.body.appendChild(this.sound);\n    }\n    \n    play(){\n      this.sound.play();\n    }\n    stop(){\n      this.sound.pause();\n    }\n  }","// import StopWatch from './scripts/stopwatch';\nimport DriveWay from './scripts/driveway';\nimport MovingObject from './scripts/moving_objects';\n// import DrawingObjects from './scripts/moving_objects'\nimport Sound from './scripts/sound';\n\n// import { UpdateGame } from './scripts/utils'\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n// console.log(\"hey, script was loaded\")\n\nwindow.addEventListener(\"keydown\", function (e) { KeyDown(e); }); \n\n\n///////////STOPWATCH CODE//////////////\nlet clock;\nlet hour = 0o00;\nlet minute = 0o00;\nlet second = 0o00;\nlet count = 0o00;\n\nfunction stopWatch() {\n    if (clock) {\n        count++;\n  \n        if (count == 100) {\n            second++;\n            count = 0;\n        }\n  \n        if (second == 60) {\n            minute++;\n            second = 0;\n        }\n  \n        if (minute == 60) {\n            hour++;\n            minute = 0;\n            second = 0;\n        }\n  \n        let hrString = hour;\n        let minString = minute;\n        let secString = second;\n        let countString = count;\n  \n        if (hour < 10) {\n            hrString = \"0\" + hrString;\n        }\n  \n        if (minute < 10) {\n            minString = \"0\" + minString;\n        }\n  \n        if (second < 10) {\n            secString = \"0\" + secString;\n        }\n  \n        if (count < 10) {\n            countString = \"0\" + countString;\n        }\n  \n\n        document.getElementById('min').innerHTML = minString;\n        document.getElementById('sec').innerHTML = secString;\n        document.getElementById('count').innerHTML = countString;\n        setTimeout(stopWatch, 10);\n\n        // console.log(`${minute} min ${second} sec ${count} ms`)\n    }\n}\n///////////STOPWATCH CODE  END//////////////\n\n\n\n// let clock;\n// let stopWatch = new StopWatch(clock);\n\n// CANVAS DRAWING\nconst canvas = document.getElementById(\"game-canvas\");\nconst ctx = canvas.getContext(\"2d\");\ncanvas.width = 626;\ncanvas.height = 626;\n\n// WORKING WITH DOM\n// let controls = document.querySelector(\".controls\");\nlet play_game = document.getElementById(\"play_game\");\nlet resetGame = document.getElementById(\"resetGame\");\nlet control_keys = document.getElementById(\"control_keys\");\nlet control_keys_space = document.getElementById(\"control_keys_space\");\nlet control_keys_pause = document.getElementById(\"control_keys_pause\");\nlet control_keys_honk = document.getElementById(\"control_keys_honk\");\nlet control_keys_acceleration = document.getElementById(\"control_keys_acceleration\")\nlet stopwatch = document.getElementById('time');\n\nlet gameCounters = document.querySelector('.game-counters')\nlet roundCounter = document.getElementById('round-counter');\nlet lifeCounter = document.getElementById('life-counter');\nlet rageLevel = document.getElementById('rage-level');\nlet carsPassed = document.getElementById('cars-passed');\n\nlet collisionScreen = document.getElementById('collision-screen');\nlet soundControl = document.querySelector(\".sound-control\");\n\nlet gameInstructions = document.querySelector(\".tooltip\")\n// let lackOfRangeScreen = document.getElementById('lack-of-rage-screen');\n\n\nplay_game.addEventListener(\"click\", (e)=>{\n    // console.log('play is working');\n    LaunchGame();\n    play_game.classList.add(\"hide-controls\");\n    gameInstructions.style.display=\"none\"\n    resetGame.style.display =\"block\";\n    stopwatch.style.display = \"block\";\n    control_keys.style.display = \"block\";\n    control_keys_space.style.display = \"block\";\n    control_keys_pause.style.display = \"block\";\n    control_keys_honk.style.display = \"block\";\n    control_keys_acceleration.style.display = \"block\";\n    gameCounters.style.display = \"block\";\n    //stopwatch run\n    clock = true;\n    stopWatch();\n})\n\nresetGame.addEventListener(\"click\", (e)=>{\n    // console.log('reset is working')\n    window.location.reload()\n})\n\n\n\n//VARIABLES start\n\nconst REFRESH_SCREEN_TIME = 1000 / 50;\nlet timerInterval = null;\n\nlet size = 0.1 //Moving object size\nlet speed = 4; //speed for canvas \nlet obstacles = []; //store all moving obstacles\nlet obstaclesSpeed = 4; //could be triggered in rounds increasing\nlet playerAcceleration = 5; // speed of moving on the canvas\n\n// GAME COUNTERS\nlet round = 1; // round number\nroundCounter.innerHTML = `Round ${round}`\n\nlet life = 3; // \"life\" left\nlifeCounter.innerHTML = `Life ${life}`\n\nlet rage = 3; //road rage, remove obstacles, \"n\" amount of attempts\nrageLevel.innerHTML = `Rage ${rage}`\n\nlet disappeardCars = 0\ncarsPassed.innerHTML = `Passed cars ${disappeardCars}`\n\n//SOUND AREA\nlet mute = false;\nsoundControl.addEventListener(\"click\", (e)=>{\n    // console.log(\"sound control is working\")\n    if(mute===false){\n        mute = true\n        soundControl.src = \"assets/sound-off.png\"\n        // console.log(mute, \"mute on\")\n    } else{\n        mute = false\n        soundControl.src = \"assets/sound-on.png\"\n        // console.log(mute, \"mute off\")\n    }\n})\n\nlet carHorn = new Sound('assets/car-horn2.wav');\nlet crashSound = new Sound('assets/crash_sound.wav');\nlet highwaySound = new Sound('assets/highway-sound.mp3')\n\n\n//VARIABLES end\n// if(round == 2){\n//     // roundCounter.classList.add(\"round-counter-animation\")\n//     // setTimeout(()=>{\n//     //     roundCounter.classList.remove(\"round-counter-animation\")\n//     // },2000)\n// }\n\n\n\n// Function to pause the game and show the pause screen\nlet popupPause;\nfunction pauseScreen(){\n    if(timerInterval != null){\n        StopGame();\n\n        //pausing main sound\n        if(!mute){\n            highwaySound.stop()\n        }\n\n\n        // if(!mute) highwaySound.pause()\n        clock = false;\n        collisionScreen.style.display = 'block';\n        popupPause = document.createElement(\"p\");\n        popupPause.innerHTML =`<br> <br> GAME PAUSED <br> <br> press ESC to CONTINUE`\n        collisionScreen.appendChild(popupPause);\n\n    } else {\n        LaunchGame();\n\n        //playing main sound\n        if(!mute){\n            highwaySound.play()\n        }\n\n        // if(!mute) highwaySound.play() //sound on\n        popupPause.remove();\n        collisionScreen.style.display = 'none';\n        clock = true;\n        stopWatch();\n    \n    }\n}\n\n\n// Function to start/pause game\nfunction pausingGame(){\n    if(timerInterval == null){\n        LaunchGame();\n\n        //playing main sound\n        if(!mute){\n            highwaySound.play()\n        }\n\n        // if(!mute) highwaySound.play() //sound on\n        clock = true;\n        stopWatch();\n    } else {\n        StopGame();\n\n  //pausing main sound\n    if(!mute){\n        highwaySound.stop()\n    }\n\n        // if(!mute) highwaySound.pause()\n        clock = false;\n\n    }\n    \n}\n\n\n// Array with driveways images //works fine now\nlet driveWays = [new DriveWay('assets/driveway1.jpeg', 0, speed, canvas), new DriveWay('assets/driveway1.jpeg', canvas.width, speed, canvas)]; \n\n// Main charachter RACER // works fine now //car1\nlet racer = new MovingObject(\"assets/car1.png\", canvas.width / 2, canvas.height / 1.3, true, speed, size, canvas, obstaclesSpeed); // main racer object\n\n\n//LEVEL LOGIC\nfunction increaseLevel(){\n    if(disappeardCars < 5){\n        round = 1;\n        obstaclesSpeed = 4;\n        // console.log(`in increase level! round:${round}, obstaclespeed:${obstaclesSpeed}`)\n    } else if(disappeardCars > 5 && disappeardCars < 20){\n        roundCounter.classList.add(\"round-counter-animation\")\n        round = 2;\n        setTimeout(()=>roundCounter.classList.remove(\"round-counter-animation\"),8000)\n        roundCounter.innerHTML = `Round ${round}`\n        obstaclesSpeed = 5.5;\n        // console.log(`in increase level! round:${round}, obstaclespeed:${obstaclesSpeed}`)\n    } else if (disappeardCars > 20 && disappeardCars < 30){\n        roundCounter.classList.add(\"round-counter-animation1\")\n        round = 3;\n        // setTimeout(()=>roundCounter.classList.remove(\"round-counter-animation1\"),8000)\n        roundCounter.innerHTML = `Round ${round}`\n        obstaclesSpeed = 7;\n        // console.log(`in increase level! round:${round}, obstaclespeed:${obstaclesSpeed}`)\n    }   else if(disappeardCars === 35 ){\n        collisionScreen.style.display = 'block';\n        StopGame();\n        if(!mute){\n            highwaySound.stop()\n        }\n        clock = false; // stop clock when collision\n        let tag = document.createElement(\"p\");\n        tag.innerHTML =`\n        WOW, impressive driving skills!!! <br> <br> \n        Your time is:  ${minute} min ${second} sec ${count} ms <br>\n        You passed:   ${disappeardCars} cars <br> \n        Rage mode left:   ${rage} <br> \n        Lives left:   ${life} <br> \n        `\n        collisionScreen.appendChild(tag);\n        resetGame.classList.add(\"rage-level-shake\");\n    }\n}\n    \n// MAIN FUNCTIONS\n\nfunction LaunchGame(){\n        // if(!racer.collideWith)\n        // {\n            timerInterval = setInterval(UpdateGame, REFRESH_SCREEN_TIME); //Refreshing screen n time per second\n        // }\n       \n    }\n\nfunction StopGame(){\n        clearInterval(timerInterval); //Stop game\n        timerInterval = null;\n    }\n\nfunction UpdateGame(){\n        driveWays[0].updateDriveWay(driveWays[1]);\n        driveWays[1].updateDriveWay(driveWays[0]);\n      \n        if(!mute){\n            highwaySound.play()\n        } else {\n            highwaySound.stop()\n        }\n        //TESTING TIMER\n        \n        //Generating obstacles  //best value so far randomNumber(0, 10000) > 9750\n\n        increaseLevel()\n      \n        let randX =randomNumber(155, canvas.width - 190);\n        let randY = randomNumber(150, 350) * -1;\n\n        setTimeout(()=>{\n            if(randomNumber(0, 10000) > 9950){  //car 1\n                obstacles.push(new MovingObject(\"assets/cabrio.png\", randX,randY, false, speed, size, canvas, obstaclesSpeed));\n            }\n            if(randomNumber(0, 10000) > 9950){ //car 2\n                obstacles.push(new MovingObject(\"assets/bugatti.png\", randX,randY, false, speed, size, canvas, obstaclesSpeed));\n            }\n            if(randomNumber(0, 10000) > 9950){ //car 3\n                obstacles.push(new MovingObject(\"assets/ferrari_red.png\", randX,randY, false, speed, size, canvas, obstaclesSpeed));\n            }\n            // if(randomNumber(0, 10000) > 9950){ //car 4\n            //     obstacles.push(new MovingObject(\"assets/acura1.png\", randX,randY, false, speed, size, canvas, obstaclesSpeed));\n            // }\n        },1000)\n\n\n        racer.updateMovingObject();\n    \n        if(racer.collideWith){\n            // alert(\"!!!!!!!!!OHHHHH CRASH!\");\n            // StopGame();\n        }\n    \n        let isDestroyed = false; \n    \n        for(let i = 0; i < obstacles.length; i++){\n            obstacles[i].updateMovingObject();\n            if(obstacles[i].collideWith){\n                isDestroyed = true;\n            }\n        }\n    \n        if(isDestroyed){ //removing cars from canvas and counting them\n            obstacles.shift();\n            disappeardCars++\n            carsPassed.innerHTML = `Passed cars ${disappeardCars}`\n        }\n    \n        let collision = false;\n    \n        for(let i = 0; i < obstacles.length; i++){\n            collision = racer.hit(obstacles[i]);\n    \n            if(collision){\n                if(!mute) crashSound.play();\n                // crashSound.play();\n                //adding screen information for a user\n                collisionScreen.style.display = 'block';\n                if(life > 0){\n                    pausingGame()\n                    life--;\n                    let tag = document.createElement(\"p\");\n                    tag.innerHTML =`<br> <br>Hey, you hit a car! <br> <br>\n                     ${life} collision(s) left`\n\n                    collisionScreen.appendChild(tag);\n\n                    setTimeout(()=>{\n                        tag.remove();\n                        collisionScreen.style.display = 'none';\n                        LaunchGame();\n                        clock = true;\n                        stopWatch();\n                    },2500)\n                    obstacles = [];\n                    lifeCounter.innerHTML = `Life ${life}`\n                } else{\n\n                    StopGame();\n                    if(!mute){\n                        highwaySound.stop()\n                    }\n                    clock = false; // stop clock when collision\n                    let tag = document.createElement(\"p\");\n                    tag.innerHTML =`\n                    You're a bad driver!!! <br> <br> \n                    Your time is: ${minute} min ${second} sec ${count} ms <br>\n                    You passed: ${disappeardCars} cars <br> \n                    `\n                    collisionScreen.appendChild(tag);\n                    resetGame.classList.add(\"rage-level-shake\");\n                    break;\n                }\n\n            }\n        }\n        \n        draw();   \n        // DrawingObjects.draw(); move draw to separate class\n    }\n    \n\n\n\n\n//adding graphics on canvas works fine\nfunction draw(){ \n        // clear all from canvas\n        ctx.clearRect(0, 0, canvas.width, canvas.height); \n       \n        // drawing background driveway\n        for(let i = 0; i < driveWays.length; i++){\n            ctx.drawImage(\n                driveWays[i].image, // driveway image\n                0, //staring point X on driveway image\n                0, //staring point Y on driveway image\n                driveWays[i].image.width, //end point X on driveway image\n                driveWays[i].image.height, //end point Y on driveway image\n                driveWays[i].x, // Axis X on canvas\n                driveWays[i].y, // Axis Y on canvas\n                canvas.width, //canvas width\n                canvas.width //canvas hiight\n            );\n        }\n        \n        // drawing main racer\n        drawMovingObject(racer);\n        \n        // drawing obstacles\n        for(let i = 0; i < obstacles.length; i++){\n            drawMovingObject(obstacles[i]);\n        }\n    }\n // works fine   \nfunction drawMovingObject(movingObject){\n        ctx.drawImage(\n            movingObject.image, \n            0, \n            0, \n            movingObject.image.width, \n            movingObject.image.height, \n            movingObject.x, \n            movingObject.y, \n            movingObject.image.width * size, \n            movingObject.image.height * size \n        );\n    }\n\n    \n//Rage effect for canvas  START\n\nfunction shakeCanvas(){\n    let canvasShake = document.getElementById('game-canvas');\n\n        if(rage > 0){\n            if(!mute) carHorn.play()\n            // carHorn.play();\n            canvasShake.style =\"box-shadow: 0 0 50px rgb(225, 18, 18)\";\n            canvasShake.classList.add(\"shacky-canvas\");\n            // console.log(rage, \"before action\")\n            obstacles = [];\n            rage--;\n            rageLevel.innerHTML = `Rage ${rage}`\n            // console.log(rage, \"after action\")\n        } else {\n            rageLevel.classList.add(\"rage-level-shake\");\n            setTimeout(()=>{\n                rageLevel.classList.remove(\"rage-level-shake\");\n            },3000)\n        }\n\n        setTimeout(()=>{\n            canvasShake.classList.remove(\"shacky-canvas\");\n            canvasShake.style =\"box-shadow: 0 0 24px rgb(21, 199, 223)\";\n        },1500)\n}\n//Rage effect for canvas END\n\n\n\n\n//that's fine as well\nfunction KeyDown(e){\n    e.preventDefault();\n        switch(e.keyCode){\n            case 65: //Left\n                racer.move(\"x\", -speed, playerAcceleration);\n                break;\n    \n            case 68: //Right\n                racer.move(\"x\", speed, playerAcceleration);\n                break;\n    \n            case 87: //Up\n                racer.move(\"y\", -speed, playerAcceleration);\n                break;\n    \n            case 83: //Down\n                racer.move(\"y\", speed, playerAcceleration);\n                break;\n\n            case 32: //Space\n                // Remove all obstacles from screen\n                // obstacles = [];\n                shakeCanvas()\n                break;\n\n            case 72: // Key \"H\"\n                //Horn sound\n                if(!mute) carHorn.play()\n                break;\n            \n            case 38: //Up\n                playerAcceleration++;\n                // console.log(`Acceleration: ${playerAcceleration}`)\n                break;\n            case 40: //down\n                playerAcceleration--;\n                // console.log(`Acceleration: ${playerAcceleration}`)\n                break;\n    \n            case 27: //Esc pausing game and stopwatch\n                // pausingGame()\n                pauseScreen()\n                break;\n        }\n    }\n\n\n    \n    // that's fine\nfunction randomNumber(min, max) {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n\n    \n});"],"names":["DriveWay","constructor","image","y","speed","canvas","this","x","loaded","Image","object","addEventListener","src","updateDriveWay","driveWay","height","width","MovingObject","isRacer","size","obstaclesSpeed","playerAcceleration","collideWith","updateMovingObject","hit","movingObject","collisionStatus","move","vector","acceleration","Sound","sound","document","createElement","setAttribute","style","display","body","appendChild","play","stop","pause","clock","window","e","preventDefault","keyCode","racer","canvasShake","getElementById","rage","mute","carHorn","classList","add","obstacles","rageLevel","innerHTML","setTimeout","remove","shakeCanvas","timerInterval","StopGame","highwaySound","collisionScreen","popupPause","LaunchGame","stopWatch","KeyDown","hour","minute","second","count","hrString","minString","secString","countString","ctx","getContext","play_game","resetGame","control_keys","control_keys_space","control_keys_pause","control_keys_honk","control_keys_acceleration","stopwatch","gameCounters","querySelector","roundCounter","lifeCounter","carsPassed","soundControl","gameInstructions","location","reload","round","life","disappeardCars","crashSound","driveWays","setInterval","UpdateGame","clearInterval","tag","increaseLevel","randX","randomNumber","randY","push","isDestroyed","i","length","shift","collision","clearRect","drawImage","drawMovingObject","draw","min","max","Math","floor","random"],"sourceRoot":""}